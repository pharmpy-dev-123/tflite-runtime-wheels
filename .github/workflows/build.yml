name: Build

on:
  workflow_dispatch:
    inputs:
      pypi-name:
        description: 'Name to use for the package on PyPI'
        required: false
        default: 'pharmpy-tflite-runtime'
      tensorflow-version:
        description: 'TensorFlow version to build (for instance v2.9.1)'
        required: true

jobs:

  build:

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
        include:
          - platform: windows-latest
            tensorflow-target: windows

    runs-on: ${{ matrix.platform }}

    steps:

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: pip install numpy pybind11 wheel

      - name: Clone tensorflow
        uses: actions/checkout@v3
        with:
          repository: tensorflow/tensorflow
          ref: refs/tags/${{ inputs.tensorflow-version }}

      - name: Set PYTHON_BIN_PATH
        run: echo "PYTHON_BIN_PATH=$(which python)" >> $GITHUB_ENV
        shell: bash

      - name: Set TENSORFLOW_TARGET
        run: echo "TENSORFLOW_TARGET=${{ matrix.tensorflow-target }}" >> $GITHUB_ENV
        shell: bash

      - name: Set WHEEL_PROJECT_NAME
        run: echo "WHEEL_PROJECT_NAME=${{ inputs.pypi-name }}" >> $GITHUB_ENV
        shell: bash

      - name: Environment information
        run: |
          echo "platform: ${{matrix.platform}}"
          echo "python version: ${{matrix.python-version}}"
          echo "TENSORFLOW_TARGET=$TENSORFLOW_TARGET"
          echo "PYTHON_BIN_PATH=$PYTHON_BIN_PATH"
          echo "which python3: $(which python3)"
          echo "which python: $(which python)"
        shell: bash

      - name: Build wheel
        run: |
          bash tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh
        shell: bash

      - uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          retention-days: 1
          name: build-tflite-${{ inputs.tensorflow-version }}-${{ matrix.platform }}-python${{ matrix.python-version }}
          path: tensorflow/lite/tools/pip_package/gen/tflite_pip/python3


  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Install tree
        run: sudo apt-get -y install tree

      - name: List artifacts
        run: tree artifacts

      - name: Create dist folder
        run: |
          mkdir dist
          cp -l artifacts/*/dist/* dist

      - name: List dist objects
        run: tree dist

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print_hash: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
