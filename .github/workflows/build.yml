name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:

  build:

    strategy:
      matrix:
        tensorflow-ref: ['refs/tags/v2.9.1']
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
        include:
          - platform: windows-latest
            tensorflow-target: windows

    runs-on: ${{ matrix.platform }}

    steps:

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: pip install numpy pybind11 wheel

      - name: Clone tensorflow
        uses: actions/checkout@v3
        with:
          repository: tensorflow/tensorflow
          ref: ${{ matrix.tensorflow-ref }}

      - name: Set PYTHON_BIN_PATH
        run: echo "PYTHON_BIN_PATH=$(which python)" >> $GITHUB_ENV
        shell: bash

      - name: Set TENSORFLOW_TARGET
        run: echo "TENSORFLOW_TARGET=${{ matrix.tensorflow-target }}" >> $GITHUB_ENV
        shell: bash

      - name: Environment information
        run: |
          echo "platform: ${{matrix.platform}}"
          echo "python version: ${{matrix.python-version}}"
          echo "TENSORFLOW_TARGET=$TENSORFLOW_TARGET"
          echo "PYTHON_BIN_PATH=$PYTHON_BIN_PATH"
          echo "which python3: $(which python3)"
          echo "which python: $(which python)"
        shell: bash

      - name: Build wheel
        run: |
          bash tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh
        shell: bash

      - uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          retention-days: 1
          name: build-${{ matrix.tensorflow-ref }}-${{ matrix.platform }}-${{ matrix.python-version }}
          path: /home/runner/work/tflite-runtime-wheels/tflite-runtime-wheels/tensorflow/lite/tools/pip_package/gen/tflite_pip/python3


  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install tree
        run: sudo apt-get -y install tree

      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: List artifacts
        run: tree artifacts
