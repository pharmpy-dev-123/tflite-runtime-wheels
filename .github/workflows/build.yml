name: Build

on:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

jobs:

  build:

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
        include:

          - platform: windows-latest
            target: windows

          - platform: windows-latest
            python-version: '3.8'
            python-bin-path: 'C:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\python3.exe'

          - platform: windows-latest
            python-version: '3.10'
            python-bin-path: 'C:\\hostedtoolcache\\windows\\Python\\3.10.5\\x64\\python3.exe'

    runs-on: ${{ matrix.platform }}

    steps:

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install python dependencies
        run: pip install numpy pybind11 wheel

      - name: Clone tensorflow
        uses: actions/checkout@v3
        with:
          repository: tensorflow/tensorflow
          ref: refs/tags/v2.9.1

      - name: Build wheel
        env:
          PYTHON_BIN_PATH: ${{matrix.python-bin-path}}
        run: |
          echo "${{matrix.platform}} python ${{matrix.python-version}}"
          echo "TARGET=${{matrix.target}}"
          echo "PYTHON_BIN_PATH=$PYTHON_BIN_PATH"
          echo "python3=$(which python3)"
          echo "python=$(which python)"
          bash tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh ${{ matrix.target }}
        shell: bash

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: github.event_name == 'workflow_dispatch' && inputs.debug && (success() || failure())
        with:
          limit-access-to-actor: true
        timeout-minutes: 15
